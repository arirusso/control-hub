Patch=function(){}
Patch.Websocket=function(network,options){options=options||{};this.debug=options.debug||false;this.logger=options.logger||console;this.network=network;this.onClose=options.onClose;this.webSocket;this._initialize();}
Patch.Websocket.prototype.disable=function(){this.webSocket.onmessage=function(event){};return false;}
Patch.Websocket.prototype.setInputCallback=function(callback){var controller=this;this.webSocket.onmessage=function(event){controller._handleEvent(event,callback);};return true;}
Patch.Websocket.prototype.isCompatible=function(){return("WebSocket"in window);}
Patch.Websocket._eventToControllerMessages=function(event){var messages=[]
var rawMessages=JSON.parse(event.data);for(var i=0;i<rawMessages.length;i++){var rawMessage=rawMessages[i];var message=Patch.Websocket._processMessage(rawMessage);messages.push(message);}
return messages;}
Patch.Websocket._processMessage=function(message){var timestamp=Number(message.timestamp);message.time=new Date(timestamp);message.index=Number(message.index);message.value=parseFloat(message.value);return message;}
Patch.Websocket.prototype._handleEvent=function(event,callback){var messages=Patch.Websocket._eventToControllerMessages(event);if(this.debug){this.logger.log("Patch: Messages received");this.logger.log(messages);}
callback(messages);return messages;}
Patch.Websocket.prototype._getAddress=function(){return"ws://"+this.network.host+":"+this.network.port+"/echo";}
Patch.Websocket.prototype._initialize=function(){var logger=this.logger;logger.log("Patch: Initializing")
var address=this._getAddress();if(this.isCompatible())
{this.webSocket=new WebSocket(address);this.webSocket.onopen=function(){logger.log("Patch: Ready")};var controller=this;this.webSocket.onclose=function(){logger.log("Patch: Closed");if(controller.onClose!==undefined&&controller.onClose!==null){controller.onClose();}};}else{logger.log("Websocket not supoorted");return false;}
return true;}