ControlHub=function(network,options){options=options||{};this.debug=options.debug||false;this.webSocket;this.network=network;this.onClose=options.onClose;this.initialize();}
ControlHub.eventToControllerMessage=function(evt){var msg=JSON.parse(evt.data);for(var i in msg){if(i==='timestamp'){var timestamp=Number(msg.timestamp);msg.time=new Date(timestamp);}else{msg[i].index=Number(msg[i].index);msg[i].value=parseFloat(msg[i].value);}}
return msg;}
ControlHub.prototype.initialize=function(){var address="ws://"+this.network.host+":"+this.network.port+"/echo";if("WebSocket"in window)
{this.webSocket=new WebSocket(address);this.webSocket.onopen=function(){console.log("control hub ready")};var controller=this;this.webSocket.onclose=function(){console.log("control hub closed");if(controller.onClose!==undefined&&controller.onClose!==null){controller.onClose();}};}else{console.log("websocket not supoorted");}}
ControlHub.prototype.disable=function(){this.webSocket.onmessage=function(event){};return false;}
ControlHub.prototype.handleEvent=function(event,callback){var message=ControlHub.eventToControllerMessage(event);if(this.debug){console.log("message received: ");console.log(message);}
callback(message);return message;}
ControlHub.prototype.onMessage=function(callback){var controller=this;this.webSocket.onmessage=function(event){controller.handleEvent(event,callback);};return true;}